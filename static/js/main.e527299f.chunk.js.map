{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h5/Rout.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","sty","message","src","avatar","alt","imag","nook","text","name","mess","time","messageData","HW1","Affair","style","affair","priority","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","f","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","onEnter","error","totalUsers","inputClass","s","errorInput","input","greeting","value","onChange","onKeyDown","onBlur","button","disabled","count","GreetingContainer","users","addUserCallback","setName","setError","alert","length","e","trimmedName","currentTarget","trim","key","HW3","setUsers","user","v1","SuperInputText","type","onChangeText","onKeyPress","spanClassName","restProps","finalSpanClassName","finalInputClassName","superInput","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","setText","showAlert","setChecked","column","blue","PreJunior","Error404","Junior","JuniorPlus","PATH","Rout","path","element","Header","to","HW5","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.e527299f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__3315Q\",\"imag\":\"Message_imag__2Tq3V\",\"text\":\"Message_text__2TpM0\",\"nook\":\"Message_nook__HVGe8\",\"name\":\"Message_name__3Sc53\",\"mess\":\"Message_mess__1uk2a\",\"time\":\"Message_time__8DTlo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"greeting\":\"Greeting_greeting__3gTsf\",\"error\":\"Greeting_error__3uiBl\",\"input\":\"Greeting_input__fOoWL\",\"errorInput\":\"Greeting_errorInput__3l5oO\",\"button\":\"Greeting_button__lq7C9\",\"count\":\"Greeting_count__2FNKc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SuperInputText_input__Uwt6O\",\"superInput\":\"SuperInputText_superInput__2tJXo\",\"errorInput\":\"SuperInputText_errorInput__wrum0\",\"error\":\"SuperInputText_error__2wIFh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__3GUe5\",\"red\":\"SuperButton_red__zEHSu\",\"button\":\"SuperButton_button__pr5zo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__1OZV1\",\"column\":\"HW4_column__K5EYz\",\"testSpanError\":\"HW4_testSpanError__wa_dz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__y0CzI\",\"spanClassName\":\"SuperCheckbox_spanClassName__23qQ2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16P9H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"affair\":\"Affairs_affair___JayG\"};","import React from 'react'\r\nimport sty from './Message.module.css'\r\n\r\nexport type MessagePropsType = {\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n}\r\n\r\n function Message(props: MessagePropsType) {\r\n    return (\r\n        <div className={sty.message} >\r\n            <img src={props.avatar} alt={\"\"} className={sty.imag}/>\r\n            <div className={sty.nook}></div>\r\n\r\n            <div className={sty.text}>\r\n                <div className={sty.name}>{props.name}</div>\r\n                <div className={sty.mess}>{props.message}</div>\r\n                <div className={sty.time}>{props.time}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message","import React from 'react'\r\nimport Message from \"./Message\";\r\n\r\nconst messageData = {\r\n    avatar: 'https://w0.peakpx.com/wallpaper/544/324/HD-wallpaper-sexy-lady-mena-suvari-posing-blonde-beautiful-face-sexy.jpg',\r\n    name: 'Vika',\r\n    message: 'Hello! How are you?',\r\n    time: '22:00',\r\n}\r\n\r\n\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 1\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import React from 'react'\r\nimport {AffairType} from './HW2';\r\nimport  style from './Affairs.module.css'\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: AffairType // need to fix any\r\n    deleteAffairCallback: (id:number)=>void // need to fix any\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => {props.deleteAffairCallback(props.affair._id)}// need to fix\r\n\r\n    return (\r\n        <div className={style.affair}>\r\n            <div>{props.affair.name}</div>\r\n            <div>[{props.affair.priority}]</div>\r\n\r\n            <button onClick={deleteCallback}>X</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affair\r\n","import React from 'react'\r\nimport Affair from './Affair'\r\nimport {AffairType, FilterType} from './HW2'\r\n\r\ntype AffairsPropsType = { // need to fix any\r\n    data: AffairType[]\r\n    setFilter: (filter:FilterType)=>void\r\n    deleteAffairCallback: (_id: number)=>void\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair // should work\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => {props.setFilter('all')} // need to fix\r\n    const setHigh = () => {props.setFilter('high')}\r\n    const setMiddle = () => {props.setFilter('middle')}\r\n    const setLow = () => {props.setFilter('low')}\r\n\r\n    return (\r\n        <div>\r\n\r\n            {mappedAffairs}\r\n\r\n            <button onClick={setAll}>All</button>\r\n            <button onClick={setHigh}>High</button>\r\n            <button onClick={setMiddle}>Middle</button>\r\n            <button onClick={setLow}>Low</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs\r\n","import React, {useState} from 'react'\r\nimport Affairs from './Affairs'\r\n\r\n// types\r\nexport type AffairPriorityType = 'low'| 'middle' | 'high' // need to fix any\r\nexport type AffairType = {\r\n    _id:number\r\n    name: string\r\n    priority: AffairPriorityType\r\n}\r\nexport type FilterType = 'all' | AffairPriorityType\r\n\r\n// constants\r\nconst defaultAffairs: AffairType[] = [\r\n    {_id: 1, name: 'React', priority: 'high'},\r\n    {_id: 2, name: 'anime', priority: 'low'},\r\n    {_id: 3, name: 'games', priority: 'low'},\r\n    {_id: 4, name: 'work', priority: 'high'},\r\n    {_id: 5, name: 'html & css', priority: 'middle'},\r\n]\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: AffairType[], filter: FilterType): AffairType[] => { // need to fix any\r\n    if (filter === 'all') return affairs\r\n        else if (filter ==='low') return affairs.filter(f=>f.priority==='low')\r\n        else if (filter ==='middle') return affairs.filter(f=>f.priority==='middle')\r\n        else if (filter ==='high') return affairs.filter(f=>f.priority==='high')\r\n    else return affairs// need to fix\r\n}\r\nexport const deleteAffair = (affairs: AffairType[], _id: number): AffairType[] => { // need to fix any\r\n    return affairs.filter(f=>f._id !== _id )\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<AffairType[]>(defaultAffairs) // need to fix any\r\n    const [filter, setFilter] = useState<FilterType>('all')\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter)\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n","import React, {ChangeEvent,KeyboardEvent} from 'react'\r\nimport s from './Greeting.module.css'\r\n\r\ntype GreetingPropsType = {\r\n    name: string // need to fix any\r\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>)=>void // need to fix any\r\n    addUser: ()=>void// need to fix any\r\n    onEnter: (e: KeyboardEvent<HTMLInputElement>) => void\r\n    error: string // need to fix any\r\n    totalUsers: number // need to fix any\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, onEnter, error, totalUsers} // деструктуризация пропсов\r\n) => {\r\n\r\n    const inputClass = error ? s.errorInput : s.input // need to fix with (?:)\r\n\r\n    return (\r\n        <div className={s.greeting}>\r\n            <div>\r\n                <input\r\n                    value={name}\r\n                    onChange={setNameCallback}\r\n                    className={inputClass}\r\n                    onKeyDown={onEnter}\r\n                    onBlur={setNameCallback}\r\n                />\r\n                <div className={s.error}>{error}</div>\r\n            </div>\r\n\r\n            <button onClick={addUser} className={s.button} disabled={!name}>add</button>\r\n            <div className={s.count}>{totalUsers}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Greeting\r\n","import React, {KeyboardEvent ,ChangeEvent, useState} from 'react'\r\nimport Greeting from './Greeting'\r\nimport {UserType} from './HW3';\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: UserType[] // need to fix any\r\n    addUserCallback: (name: string)=>void // need to fix any\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>('') // need to fix any\r\n    const [error, setError] = useState<string>('') // need to fix any\r\n\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\r\n        const trimmedName = e.currentTarget.value.trim()\r\n\r\n        if(trimmedName) {\r\n            setName(trimmedName)\r\n            setError('')\r\n        } else {\r\n            setName('')\r\n            setError(`name is require`)\r\n        }\r\n\r\n         // need to fix\r\n    }\r\n    const addUser = () => {\r\n        addUserCallback(name)\r\n        alert(`Hello ${name} !`) // need to fix\r\n        setName('')\r\n    }\r\n\r\n    const onEnter = (e: KeyboardEvent<HTMLInputElement>) =>{\r\n        if(e.key === 'Enter' && name) {\r\n            addUser()\r\n\r\n        }\r\n    }\r\n\r\n    const totalUsers = users.length // need to fix\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            onEnter={onEnter}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n        />\r\n    )\r\n}\r\n\r\nexport default GreetingContainer\r\n","import React, {useState} from 'react'\r\nimport GreetingContainer from './GreetingContainer'\r\nimport {v1} from 'uuid';\r\n\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string // need to fix any\r\n    name: string // need to fix any\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<UserType[]>([]) // need to fix any\r\n\r\n    const addUserCallback = (name: string) => { // need to fix any\r\n        const user ={\r\n            _id: v1(),\r\n            name\r\n        }\r\n        setUsers([...users, user]) // need to fix\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.input} ${error ? s.errorInput : s.superInput} ${className}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${s.button} ${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e) // сделайте так чтоб работал onChange и onChangeChecked\r\n\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\nimport s from './HW4.module.css'\r\nimport SuperButton from './common/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'error'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    // spanClassName={s.testSpanError}\r\n                />\r\n\r\n                <SuperInputText\r\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperButton>\r\n                    default\r\n                </SuperButton>\r\n\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                <SuperButton disabled>\r\n                    disabled\r\n                </SuperButton>\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW4\r\n","import React from 'react'\nimport HW1 from '../../h1/HW1'\nimport HW2 from '../../h2/HW2'\nimport HW3 from '../../h3/HW3'\nimport HW4 from '../../h4/HW4'\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            {/*<HW6/>*/}\n\n        </div>\n    )\n}\n\nexport default PreJunior\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react'\n\nfunction Error404() {\n    return (\n        <div>\n            <div>404</div>\n            <div>Page not found!</div>\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    )\n}\n\nexport default Error404\n","import React from 'react'\r\n\r\nfunction Junior() {\r\n    return (\r\n        <div>\r\n            Junior\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Junior\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React from 'react'\r\n\r\n\r\nfunction JuniorPlus() {\r\n    return (\r\n        <div>\r\n            JuniorPlus\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JuniorPlus\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React from 'react'\r\nimport PreJunior from './pages/PreJunior';\r\nimport Error404 from './pages/Error404';\r\nimport Junior from './pages/Junior';\r\nimport JuniorPlus from './pages/JuniorPlus';\r\nimport {Routes, Route} from 'react-router-dom';\r\n\r\n\r\nexport const PATH = {\r\n    PRE_JUNIOR: '/pre-junior',\r\n    JUNIOR: '/junior',\r\n    JUNIOR_PLUS: '/junior-plus'\r\n\r\n}\r\n\r\nfunction Rout() {\r\n\r\n    return (\r\n        <div>\r\n            <Routes>\r\n                <Route path={'/'} element={<PreJunior/>}/>\r\n                <Route path={PATH.PRE_JUNIOR} element={<PreJunior/>}/>\r\n                <Route path={PATH.JUNIOR} element={<Junior/>}/>\r\n                <Route path={PATH.JUNIOR_PLUS} element={<JuniorPlus/>}/>\r\n                <Route path={'/*'} element={<Error404/>}/>\r\n            </Routes>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rout\r\n","import React from 'react'\r\nimport {NavLink} from 'react-router-dom';\r\nimport {PATH} from './Rout';\r\n\r\nfunction Header() {\r\n    return (\r\n        <div>\r\n            <NavLink to={PATH.PRE_JUNIOR}>per-junior</NavLink>\r\n            <NavLink to={PATH.JUNIOR}>junior</NavLink>\r\n            <NavLink to={PATH.JUNIOR_PLUS}>JuniorPlus</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\nimport Header from './Header'\nimport {HashRouter} from 'react-router-dom';\nimport Rout from './Rout';\n\nfunction HW5() {\n    return (\n        <div>\n            {/*в gh-pages лучше работает HashRouter*/}\n            <HashRouter>\n\n            <Header/>\n\n            <Rout/>\n\n            </HashRouter>\n        </div>\n    )\n}\n\nexport default HW5\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW1 from '../../../p2-homeworks/h1/HW1'\r\nimport HW2 from '../../../p2-homeworks/h2/HW2';\r\nimport HW3 from '../../../p2-homeworks/h3/HW3';\r\nimport HW4 from '../../../p2-homeworks/h4/HW4';\r\nimport HW5 from '../../../p2-homeworks/h5/HW5';\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            {/*<HW1/>*/}\r\n            {/*<HW2/>*/}\r\n            {/*<HW3/>*/}\r\n            {/*<HW4/>*/}\r\n            <HW5/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\n\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n            <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}